# Generated by jeweler
# DO NOT EDIT THIS FILE
# Instead, edit Jeweler::Tasks in Rakefile, and run `rake gemspec`
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{activerecord-jdbc-adapter}
  s.version = "0.9.2"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Nick Sieger", "Ola Bini", "JRuby contributors"]
  s.date = %q{2009-09-25}
  s.description = %q{JDBC adapter for ActiveRecord, for use within JRuby on Rails.}
  s.email = %q{nick@nicksieger.com, ola.bini@gmail.com}
  s.extra_rdoc_files = [
    "LICENSE.txt",
     "README.txt"
  ]
  s.files = [
    ".gitignore",
     "History.txt",
     "LICENSE.txt",
     "README.txt",
     "Rakefile",
     "VERSION",
     "activerecord-jdbc-adapter.gemspec",
     "adapters/derby/LICENSE.txt",
     "adapters/derby/README.txt",
     "adapters/derby/Rakefile",
     "adapters/derby/lib/active_record/connection_adapters/jdbcderby_adapter.rb",
     "adapters/h2/History.txt",
     "adapters/h2/LICENSE.txt",
     "adapters/h2/README.txt",
     "adapters/h2/Rakefile",
     "adapters/h2/lib/active_record/connection_adapters/jdbch2_adapter.rb",
     "adapters/hsqldb/History.txt",
     "adapters/hsqldb/LICENSE.txt",
     "adapters/hsqldb/README.txt",
     "adapters/hsqldb/Rakefile",
     "adapters/hsqldb/lib/active_record/connection_adapters/jdbchsqldb_adapter.rb",
     "adapters/mysql/History.txt",
     "adapters/mysql/LICENSE.txt",
     "adapters/mysql/README.txt",
     "adapters/mysql/Rakefile",
     "adapters/mysql/lib/active_record/connection_adapters/jdbcmysql_adapter.rb",
     "adapters/postgresql/History.txt",
     "adapters/postgresql/LICENSE.txt",
     "adapters/postgresql/README.txt",
     "adapters/postgresql/Rakefile",
     "adapters/postgresql/lib/active_record/connection_adapters/jdbcpostgresql_adapter.rb",
     "adapters/sqlite3/LICENSE.txt",
     "adapters/sqlite3/README.txt",
     "adapters/sqlite3/Rakefile",
     "adapters/sqlite3/lib/active_record/connection_adapters/jdbcsqlite3_adapter.rb",
     "bench/bench_attributes.rb",
     "bench/bench_attributes_new.rb",
     "bench/bench_create.rb",
     "bench/bench_find_all.rb",
     "bench/bench_find_all_mt.rb",
     "bench/bench_model.rb",
     "bench/bench_new.rb",
     "bench/bench_new_valid.rb",
     "bench/bench_valid.rb",
     "drivers/derby/LICENSE.txt",
     "drivers/derby/README.txt",
     "drivers/derby/Rakefile",
     "drivers/derby/lib/derby-10.5.3.0.jar",
     "drivers/derby/lib/jdbc/derby.rb",
     "drivers/h2/History.txt",
     "drivers/h2/LICENSE.txt",
     "drivers/h2/README.txt",
     "drivers/h2/Rakefile",
     "drivers/h2/lib/h2-1.1.107.jar",
     "drivers/h2/lib/jdbc/h2.rb",
     "drivers/hsqldb/History.txt",
     "drivers/hsqldb/LICENSE.txt",
     "drivers/hsqldb/README.txt",
     "drivers/hsqldb/Rakefile",
     "drivers/hsqldb/lib/hsqldb-1.8.0.7.jar",
     "drivers/hsqldb/lib/jdbc/hsqldb.rb",
     "drivers/mysql/History.txt",
     "drivers/mysql/LICENSE.txt",
     "drivers/mysql/README.txt",
     "drivers/mysql/Rakefile",
     "drivers/mysql/lib/jdbc/mysql.rb",
     "drivers/mysql/lib/mysql-connector-java-5.0.4-bin.jar",
     "drivers/postgres/History.txt",
     "drivers/postgres/LICENSE.txt",
     "drivers/postgres/README.txt",
     "drivers/postgres/Rakefile",
     "drivers/postgres/lib/jdbc/postgres.rb",
     "drivers/postgres/lib/postgresql-8.3-604.jdbc3.jar",
     "drivers/postgres/lib/postgresql-8.3-604.jdbc4.jar",
     "drivers/sqlite3/LICENSE.txt",
     "drivers/sqlite3/README.txt",
     "drivers/sqlite3/Rakefile",
     "drivers/sqlite3/lib/jdbc/sqlite3.rb",
     "drivers/sqlite3/lib/sqlitejdbc-3.6.3.054.jar",
     "lib/active_record/connection_adapters/cachedb_adapter.rb",
     "lib/active_record/connection_adapters/derby_adapter.rb",
     "lib/active_record/connection_adapters/h2_adapter.rb",
     "lib/active_record/connection_adapters/hsqldb_adapter.rb",
     "lib/active_record/connection_adapters/informix_adapter.rb",
     "lib/active_record/connection_adapters/jdbc_adapter.rb",
     "lib/active_record/connection_adapters/jdbc_adapter_spec.rb",
     "lib/active_record/connection_adapters/jndi_adapter.rb",
     "lib/active_record/connection_adapters/mysql_adapter.rb",
     "lib/active_record/connection_adapters/oracle_adapter.rb",
     "lib/active_record/connection_adapters/postgresql_adapter.rb",
     "lib/active_record/connection_adapters/sqlite3_adapter.rb",
     "lib/jdbc_adapter.rb",
     "lib/jdbc_adapter/jdbc.rake",
     "lib/jdbc_adapter/jdbc_cachedb.rb",
     "lib/jdbc_adapter/jdbc_db2.rb",
     "lib/jdbc_adapter/jdbc_derby.rb",
     "lib/jdbc_adapter/jdbc_firebird.rb",
     "lib/jdbc_adapter/jdbc_hsqldb.rb",
     "lib/jdbc_adapter/jdbc_informix.rb",
     "lib/jdbc_adapter/jdbc_mimer.rb",
     "lib/jdbc_adapter/jdbc_mssql.rb",
     "lib/jdbc_adapter/jdbc_mysql.rb",
     "lib/jdbc_adapter/jdbc_oracle.rb",
     "lib/jdbc_adapter/jdbc_postgre.rb",
     "lib/jdbc_adapter/jdbc_sqlite3.rb",
     "lib/jdbc_adapter/jdbc_sybase.rb",
     "lib/jdbc_adapter/missing_functionality_helper.rb",
     "lib/jdbc_adapter/rake_tasks.rb",
     "lib/jdbc_adapter/tsql_helper.rb",
     "lib/jdbc_adapter/version.rb",
     "pom.xml",
     "rakelib/compile.rake",
     "rakelib/package.rake",
     "rakelib/rails.rake",
     "src/java/jdbc_adapter/JdbcAdapterInternalService.java",
     "src/java/jdbc_adapter/JdbcConnectionFactory.java",
     "src/java/jdbc_adapter/JdbcDerbySpec.java",
     "src/java/jdbc_adapter/JdbcMySQLSpec.java",
     "src/java/jdbc_adapter/MssqlRubyJdbcConnection.java",
     "src/java/jdbc_adapter/PostgresRubyJdbcConnection.java",
     "src/java/jdbc_adapter/RubyJdbcConnection.java",
     "src/java/jdbc_adapter/SQLBlock.java",
     "src/java/jdbc_adapter/Sqlite3RubyJdbcConnection.java",
     "test/activerecord/connection_adapters/type_conversion_test.rb",
     "test/activerecord/connections/native_jdbc_mysql/connection.rb",
     "test/activerecord/jall.sh",
     "test/activerecord/jtest.sh",
     "test/cachedb_simple_test.rb",
     "test/db/cachedb.rb",
     "test/db/db2.rb",
     "test/db/derby.rb",
     "test/db/h2.rb",
     "test/db/hsqldb.rb",
     "test/db/informix.rb",
     "test/db/jdbc.rb",
     "test/db/jndi_config.rb",
     "test/db/logger.rb",
     "test/db/mssql.rb",
     "test/db/mysql.rb",
     "test/db/oracle.rb",
     "test/db/postgres.rb",
     "test/db/sqlite3.rb",
     "test/db2_simple_test.rb",
     "test/derby_migration_test.rb",
     "test/derby_multibyte_test.rb",
     "test/derby_simple_test.rb",
     "test/generic_jdbc_connection_test.rb",
     "test/h2_simple_test.rb",
     "test/has_many_through.rb",
     "test/hsqldb_simple_test.rb",
     "test/informix_simple_test.rb",
     "test/jdbc_adapter/jdbc_db2_test.rb",
     "test/jdbc_adapter/jdbc_sybase_test.rb",
     "test/jdbc_common.rb",
     "test/jndi_callbacks_test.rb",
     "test/jndi_test.rb",
     "test/manualTestDatabase.rb",
     "test/minirunit.rb",
     "test/minirunit/testConnect.rb",
     "test/minirunit/testH2.rb",
     "test/minirunit/testHsqldb.rb",
     "test/minirunit/testLoadActiveRecord.rb",
     "test/minirunit/testMysql.rb",
     "test/minirunit/testRawSelect.rb",
     "test/models/add_not_null_column_to_table.rb",
     "test/models/auto_id.rb",
     "test/models/data_types.rb",
     "test/models/entry.rb",
     "test/models/mixed_case.rb",
     "test/models/reserved_word.rb",
     "test/mssql_simple_test.rb",
     "test/mysql_multibyte_test.rb",
     "test/mysql_nonstandard_primary_key_test.rb",
     "test/mysql_simple_test.rb",
     "test/oracle_simple_test.rb",
     "test/postgres_mixed_case_test.rb",
     "test/postgres_nonseq_pkey_test.rb",
     "test/postgres_reserved_test.rb",
     "test/postgres_simple_test.rb",
     "test/simple.rb",
     "test/sqlite3_simple_test.rb",
     "test/sybase_jtds_simple_test.rb"
  ]
  s.homepage = %q{http://github.com/saturnflyer/activerecord-jdbc-adapter}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.3}
  s.summary = %q{JDBC adapter for ActiveRecord, for use within JRuby on Rails.}
  s.test_files = [
    "test/cachedb_simple_test.rb",
     "test/db2_simple_test.rb",
     "test/derby_migration_test.rb",
     "test/derby_multibyte_test.rb",
     "test/derby_simple_test.rb",
     "test/generic_jdbc_connection_test.rb",
     "test/h2_simple_test.rb",
     "test/has_many_through.rb",
     "test/hsqldb_simple_test.rb",
     "test/informix_simple_test.rb",
     "test/jdbc_common.rb",
     "test/jndi_callbacks_test.rb",
     "test/jndi_test.rb",
     "test/manualTestDatabase.rb",
     "test/minirunit.rb",
     "test/mssql_simple_test.rb",
     "test/mysql_multibyte_test.rb",
     "test/mysql_nonstandard_primary_key_test.rb",
     "test/mysql_simple_test.rb",
     "test/oracle_simple_test.rb",
     "test/postgres_mixed_case_test.rb",
     "test/postgres_nonseq_pkey_test.rb",
     "test/postgres_reserved_test.rb",
     "test/postgres_simple_test.rb",
     "test/simple.rb",
     "test/sqlite3_simple_test.rb",
     "test/sybase_jtds_simple_test.rb",
     "test/activerecord/connection_adapters/type_conversion_test.rb",
     "test/activerecord/connections/native_jdbc_mysql/connection.rb",
     "test/db/cachedb.rb",
     "test/db/db2.rb",
     "test/db/derby.rb",
     "test/db/h2.rb",
     "test/db/hsqldb.rb",
     "test/db/informix.rb",
     "test/db/jdbc.rb",
     "test/db/jndi_config.rb",
     "test/db/logger.rb",
     "test/db/mssql.rb",
     "test/db/mysql.rb",
     "test/db/oracle.rb",
     "test/db/postgres.rb",
     "test/db/sqlite3.rb",
     "test/jdbc_adapter/jdbc_db2_test.rb",
     "test/jdbc_adapter/jdbc_sybase_test.rb",
     "test/minirunit/testConnect.rb",
     "test/minirunit/testH2.rb",
     "test/minirunit/testHsqldb.rb",
     "test/minirunit/testLoadActiveRecord.rb",
     "test/minirunit/testMysql.rb",
     "test/minirunit/testRawSelect.rb",
     "test/models/add_not_null_column_to_table.rb",
     "test/models/auto_id.rb",
     "test/models/data_types.rb",
     "test/models/entry.rb",
     "test/models/mixed_case.rb",
     "test/models/reserved_word.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
    else
    end
  else
  end
end
